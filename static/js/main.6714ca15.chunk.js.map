{"version":3,"sources":["components/Log.jsx","utilities/calculate.js","components/Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["Log","_ref","value","isVisible","setVisiblity","result","map","item","index","concat","exp","res","react_default","a","createElement","className","type","onClick","addNum","expression","split","reduce","previous","current","parseFloat","subNum","divNum","mulNum","modNum","calculate","console","log","includes","replace","performArthimatic","Calculator","_useState","useState","_useState2","Object","slicedToArray","setVisible","_useState3","_useState4","text","setText","updateText","btnValue","_useState5","_useState6","setLog","calculateResult","inputExp","toConsumableArray","updateToggle","Fragment","onKeyUp","event","isNaN","key","alert","li","i","target","components_Log","App","components_Calculator","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6714ca15.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst Log = ({ value, isVisible, setVisiblity }) => {\r\n    var result = value.map((item,index) => {\r\n        return `---Cal-${index+1}---\\nExp: ${item.exp}\\nResult: ${item.res}\\n`\r\n    })\r\n    \r\n  return (\r\n      <div className={isVisible?\"cal-log\":\"cal-log cal-log-show\"}>\r\n            <input type=\"button\" className=\"clear-btn\" value=\"X\" onClick={()=>setVisiblity(true)}/>\r\n          <textarea className=\"log\" value={result}>\r\n            </textarea>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Log","const performArthimatic = (expression) => {\r\n  console.log(expression);\r\n  let isList = expression.includes(\"[\");\r\n  if (isList) {\r\n    expression = expression.replace(\"[\", \"\");\r\n    expression = expression.replace(\"]\", \"\");\r\n    expression = expression.split(\",\");\r\n    return expression.reduce(\r\n      (previous, current) => parseFloat(previous) + parseFloat(current),\r\n      0\r\n    );\r\n  } else {\r\n    if (expression.includes(\"+\")) {\r\n      return addNum(expression);\r\n    } else if (expression.includes(\"-\")) {\r\n      return subNum(expression);\r\n    } else if (expression.includes(\"*\")) {\r\n      return mulNum(expression);\r\n    } else if (expression.includes(\"/\")) {\r\n      return divNum(expression);\r\n    } else if (expression.includes(\"%\")) {\r\n      return modNum(expression);\r\n    }\r\n  }\r\n};\r\nconst addNum = (expression) => {\r\n  expression = expression.split(\"+\");\r\n  return expression.reduce(\r\n    (previous, current) => parseFloat(previous) + parseFloat(current),\r\n    0\r\n  );\r\n};\r\nconst subNum = (expression) => {\r\n  expression = expression.split(\"-\");\r\n  return expression.reduce(\r\n    (previous, current) => parseFloat(previous) - parseFloat(current),\r\n    0\r\n  );\r\n};\r\nconst divNum = (expression) => {\r\n  expression = expression.split(\"/\");\r\n  return parseFloat(expression[0]) / parseFloat(expression[1]);\r\n};\r\nconst mulNum = (expression) => {\r\n  expression = expression.split(\"*\");\r\n  return parseFloat(expression[0]) * parseFloat(expression[1]);\r\n};\r\nconst modNum = (expression) => {\r\n  expression = expression.split(\"%\");\r\n  return parseFloat(expression[0]) % parseFloat(expression[1]);\r\n};\r\nconst calculate = (expression) => {\r\n  return performArthimatic(expression);\r\n};\r\n\r\nexport default calculate;\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport Log from './Log'\r\nimport calculate from '../utilities/calculate'\r\nconst Calculator = () => {\r\n    const btnList = [['7', '8', '9', '+'], ['4', '5', '6', '-'], ['1', '2', '3', '*'], ['0', '.', ',', '/'], ['[', ']', '=', '%']]\r\n    const [isVisible, setVisible] = useState(true)\r\n    \r\n    const [text, setText] = useState('')\r\n    const updateText = (btnValue) => {\r\n        setText(text+btnValue)\r\n    }\r\n    const [log, setLog] = useState([])\r\n    const updateToggle = (exp) => {\r\n        setLog([exp,...log])\r\n    }\r\n\r\n    const calculateResult = (inputExp) => {\r\n        const result = calculate(inputExp)\r\n        const exp = {\r\n            exp: inputExp,\r\n            res: result\r\n        }\r\n        setText(exp.res)\r\n        updateToggle(exp)\r\n    }\r\n    return (\r\n      <>\r\n      <div className={isVisible?'calculator':'calculator-hide'}>\r\n          <div className='text-area'>\r\n              <input type=\"text\" className='input-field' value={text} onKeyUp={(event) => {isNaN(event.key)?alert(`Invalid character: ${event.key}\\nFor Arthimatic Operations use Buttons`):updateText(event.key)}} />\r\n          <input type=\"button\" className='clear-btn' value='C' onClick={()=>setText('')}/>\r\n          <input type=\"button\" className='clear-btn add-log' value='M' onClick={()=>setVisible(false)}/>\r\n          </div>\r\n          {\r\n              btnList.map((li,i) => {\r\n                  return <div className=\"btn-row\" key={i}>\r\n                      {\r\n                          li.map((item,index) => {\r\n                              return <input type='button' value={item} onClick={(event) => event.target.value!=='='?updateText(event.target.value):calculateResult(text)} key={index} />\r\n                          })\r\n                    }\r\n                  </div>\r\n            })\r\n          }\r\n            </div>\r\n            <Log value={log} isVisible={isVisible} setVisiblity={setVisible} />\r\n            </>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Calculator from \"./components/Calculator\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App container\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}